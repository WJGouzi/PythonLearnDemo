1.成员修饰符
    共有成员
    私有成员 -> 成员属性或者方法前面添加两个'__',将共有的变成私有的，外部是不能进行访问的，只能在内部进行访问
            -> 如果有继承的关系，子类是不能继承父类中的私有成员


2.特殊成员
    __init__(self):                         类()自动执行
    __call__(self, *args, **kwargs):        对象()  类()() 自动执行
    __int__(self):                          int(对象)
    __str__(self):                          str(对象)

    # 加减乘除都是一样的道理
    __add__(self, other)                    两个对象进行相加，自定义返回一个结果，self是第一个对象，other是第二个对象
    __del__(self)                           析构方法，这是类被销毁的时候进行调用，类似于 delloc方法
    __dict__                                将对象中所有的内容以字典的形式进行返回

    # 类似于列表的操作
    __getitem__(self, item)                 将对象中的参数传给方法的item，且将结果进行返回(可以进行切片或者是索引)
    __setitem__(self, key, value)           将对象中的参数和设置的值传个方法中的key和value，设置成功后不需要返回值
    __delitem__(self, key)                  将对象中进行删除， del li[2] 类似于这样的操作，不需要返回结果

    __iter__(self)                          0.如果类中有__iter__方法，那么这个对象则是可迭代对象
                                            如果for循环遇到的是迭代器，那么直接执行__next__方法
                                            如果for循环遇到的是可迭代对象，那么会执行对象.__iter__，生成迭代器后执行__next__方法
                                            1.执行li对象的类Foo中的__iter__方法，并且获取返回值(这个返回值必须是可迭代的)
                                            2.循环上一步得到的返回值



3.metaclass 原始类

4.异常处理

5.反射

6.单例模式
